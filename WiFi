/*
 * Simple WiFi connection and LED lighting.
 * If connected to the internet, LEDs will turn on
 * By: Axel Steven Paz
 * DAte: July 29 2021
 * 
 * This program shows ESP32CAM basic connection to WiFi.
 * You need to change SSID and password to the one of your network 
 * connection. With serial monitor you can check connection state
 * 
 * We will need 4 LEDS on a Protoboard with 220 ohm resistor to each one,
 * led flash and led status.
 * 
 * Componente     PinESP32CAM     Estados lógicos
 * ledStatus------GPIO 33---------On=>LOW, Off=>HIGH
 * ledFlash-------GPIO 4----------On=>HIGH, Off=>LOW
 * led------------GPIO 12---------On=>HIGH, Off=>LOW  //OUTPUT pin for LED
 * led------------GPIO 13---------On=>HIGH, Off=>LOW  //OUTPUT pin for LED
 * led------------GPIO 4 ---------On=>HIGH, Off=>LOW  //OUTPUT pin for LED
 * led------------GPIO 2 ---------On=>HIGH, Off=>LOW  //OUTPUT pin for LED
 */

// Libraries
#include <WiFi.h>  // Library for ESP32CAM WiFi

//  Network data
const char* ssid = "INFINITUM87";  // Name of your network connection
const char* password = "********";  // password of network connection

// Objects
WiFiClient espClient; // This object controls necessary variables for WiFi connection

// Program variables
int statusLedPin = 33;  // This variable controls led status
int flashLedPin = 4; // This variable controls falsh led
double timeLast, timeNow; // Variables for non-blocking time control
double wait = 500;  // Wait 500 mili seconds to verify conexión
bool statusLed = 0;// Flag that tells me if led is on or off
int led = 13;  // OUTPUT pin to turn on LED
int led1 = 12;  // OUTPUT pin to turn on LED
int led2 = 4;  // OUTPUT pin to turn on LED
int led3 = 2;  // OUTPUT pin to turn on LED

// Program initialization
void setup() {
  //Pin configuration
  pinMode (statusLedPin, OUTPUT);// Pin configured as OUTPUT
  pinMode (flashLedPin, OUTPUT);// Pin configured as OUTPUT
  pinMode (led, OUTPUT);// Pin configured as OUTPUT
  pinMode (led1, OUTPUT);// Pin configured as OUTPUT
  pinMode (led2, OUTPUT);// Pin configured as OUTPUT
  pinMode (led3, OUTPUT);// Pin configured as OUTPUT
  digitalWrite (statusLedPin, LOW);// Initial state DOWN
  digitalWrite (flashLedPin, LOW);// Initial state DOWN
  digitalWrite (led, LOW);// Initial state DOWN
  digitalWrite (led1, LOW);// Initial state DOWN
  digitalWrite (led2, LOW);// Initial state DOWN
  digitalWrite (led3, LOW);// Initial state DOWN

  //Serial communication initialization 
  Serial.begin (115200);
  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);
 
  // Start WiFi
  WiFi.begin(ssid, password); // This function performs WiFi connection
 
  while (WiFi.status() != WL_CONNECTED) { // This loop waits for WiFi connection
    digitalWrite (statusLedPin, HIGH);
    delay(500); //It is important to wait for connection, blocking wait should be used
    digitalWrite (statusLedPin, LOW);
    Serial.print(".");  // Progress inicator
    delay (5);
  }

  // If successful connection the program continious, therefore, the following can be informed
  Serial.println();
  Serial.println("WiFi connected");
  Serial.println("IP Address: ");
  Serial.println(WiFi.localIP());

  // Successful connection, turn on LED
  if (WiFi.status () > 0){
  digitalWrite (flashLedPin, LOW);
  }
  timeLast = millis (); // Start time control
}// Fin del void setup 

//Body of the program, main loop
void loop() {
  timeNow = millis ();  // Time tracking
  if ((timeNow - timeLast > wait) && statusLed == 0){// Check flash on 
    digitalWrite (flashLedPin, HIGH);// Turn on flash
    digitalWrite (led, HIGH);// Turn on LED
    digitalWrite (led1, HIGH);// Turn on LED
    digitalWrite (led2, HIGH);// Turn on LED
    digitalWrite (led3, HIGH);// Turn on LED
    statusLed = 1;//Indicates led flash is on
    timeLast = millis (); // Starts time control
  }
  if ((timeNow - timeLast > wait) && statusLed == 1){
    digitalWrite (flashLedPin, LOW);// Turn off flash
    digitalWrite (led, LOW);// Turn off LED
    digitalWrite (led1, LOW);// Turn off LED
    digitalWrite (led2, LOW);// Turn off LED
    digitalWrite (led3, LOW);// Turn off LED
    statusLed = 0;//Indicates led flash is off
    timeLast = millis (); // Starts time control
  }
}// END void loop

Video with the activity completed successfully:
https://user-images.githubusercontent.com/86330582/128380261-c126dc55-2019-475f-8d69-350c462a88fa.mp4
